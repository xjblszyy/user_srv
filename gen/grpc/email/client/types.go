// Code generated by goa v3.0.2, DO NOT EDIT.
//
// email gRPC client types
//
// Command:
// $ goa gen user/design

package client

import (
	email "user/gen/email"
	emailpb "user/gen/grpc/email/pb"
)

// NewActiveRequest builds the gRPC request type from the payload of the
// "active" endpoint of the "email" service.
func NewActiveRequest(payload *email.ActivePayload) *emailpb.ActiveRequest {
	message := &emailpb.ActiveRequest{
		Code: payload.Code,
	}
	return message
}

// NewActiveResult builds the result type of the "active" endpoint of the
// "email" service from the gRPC response type.
func NewActiveResult(message *emailpb.ActiveResponse) string {
	result := message.Field
	return result
}

// NewActiveInvalideCodeError builds the error type of the "active" endpoint of
// the "email" service from the gRPC error response type.
func NewActiveInvalideCodeError(message *emailpb.ActiveInvalideCodeError) *email.EmailInvalide {
	er := &email.EmailInvalide{
		Message: message.Message_,
		ID:      message.Id,
	}
	return er
}

// NewSendEmailRequest builds the gRPC request type from the payload of the
// "send_email" endpoint of the "email" service.
func NewSendEmailRequest(payload *email.SendEmailPayload) *emailpb.SendEmailRequest {
	message := &emailpb.SendEmailRequest{
		Email: payload.Email,
	}
	return message
}

// NewSendEmailResult builds the result type of the "send_email" endpoint of
// the "email" service from the gRPC response type.
func NewSendEmailResult(message *emailpb.SendEmailResponse) string {
	result := message.Field
	return result
}

// NewSendEmailInvalideEmailError builds the error type of the "send_email"
// endpoint of the "email" service from the gRPC error response type.
func NewSendEmailInvalideEmailError(message *emailpb.SendEmailInvalideEmailError) *email.EmailInvalide {
	er := &email.EmailInvalide{
		Message: message.Message_,
		ID:      message.Id,
	}
	return er
}

// NewSendEmailEmailNotFoundError builds the error type of the "send_email"
// endpoint of the "email" service from the gRPC error response type.
func NewSendEmailEmailNotFoundError(message *emailpb.SendEmailEmailNotFoundError) *email.EmailNotFound {
	er := &email.EmailNotFound{
		Message: message.Message_,
		ID:      message.Id,
	}
	return er
}
