// Code generated by goa v3.0.2, DO NOT EDIT.
//
// file gRPC client CLI support package
//
// Command:
// $ goa gen user-srv/design

package client

import (
	"encoding/json"
	"fmt"
	file "user-srv/gen/file"
	filepb "user-srv/gen/grpc/file/pb"
)

// BuildUploadPayload builds the payload for the file upload endpoint from CLI
// flags.
func BuildUploadPayload(fileUploadMessage string) (*file.UploadPayload, error) {
	var err error
	var message filepb.UploadRequest
	{
		if fileUploadMessage != "" {
			err = json.Unmarshal([]byte(fileUploadMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, example of valid JSON:\n%s", "'{\n      \"file\": \"Qui quas ut non sint.\"\n   }'")
			}
		}
	}
	v := &file.UploadPayload{
		File: message.File,
	}
	return v, nil
}
