// Code generated by goa v3.0.2, DO NOT EDIT.
//
// file gRPC server types
//
// Command:
// $ goa gen user-srv/design

package server

import (
	file "user-srv/gen/file"
	fileviews "user-srv/gen/file/views"
	filepb "user-srv/gen/grpc/file/pb"
)

// NewUploadPayload builds the payload of the "upload" endpoint of the "file"
// service from the gRPC request type.
func NewUploadPayload(message *filepb.UploadRequest) *file.UploadPayload {
	v := &file.UploadPayload{
		File: message.File,
	}
	return v
}

// NewUploadResponse builds the gRPC response type from the result of the
// "upload" endpoint of the "file" service.
func NewUploadResponse(result *fileviews.ResponseDataView) *filepb.UploadResponse {
	message := &filepb.UploadResponse{}
	if result.Code != nil {
		message.Code = int32(*result.Code)
	}
	if result.Message != nil {
		message.Message_ = *result.Message
	}
	if result.Data != nil {
		message.Data = *result.Data
	}
	if result.Code == nil {
		message.Code = 200
	}
	if result.Message == nil {
		message.Message_ = "success"
	}
	return message
}
