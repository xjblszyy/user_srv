// Code generated by goa v3.0.2, DO NOT EDIT.
//
// file gRPC server types
//
// Command:
// $ goa gen user/design

package server

import (
	file "user/gen/file"
	filepb "user/gen/grpc/file/pb"
)

// NewUploadPayload builds the payload of the "upload" endpoint of the "file"
// service from the gRPC request type.
func NewUploadPayload(message *filepb.UploadRequest) *file.UploadPayload {
	v := &file.UploadPayload{
		File: message.File,
	}
	return v
}

// NewUploadResponse builds the gRPC response type from the result of the
// "upload" endpoint of the "file" service.
func NewUploadResponse(result string) *filepb.UploadResponse {
	message := &filepb.UploadResponse{}
	message.Field = result
	return message
}

// NewUploadFileUploadErrError builds the gRPC error response type from the
// error of the "upload" endpoint of the "file" service.
func NewUploadFileUploadErrError(er *file.FileUploadErr) *filepb.UploadFileUploadErrError {
	message := &filepb.UploadFileUploadErrError{
		Message_: er.Message,
		Id:       er.ID,
	}
	return message
}
