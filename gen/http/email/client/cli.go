// Code generated by goa v3.0.2, DO NOT EDIT.
//
// email HTTP client CLI support package
//
// Command:
// $ goa gen user/design

package client

import (
	"encoding/json"
	"fmt"
	email "user/gen/email"

	goa "goa.design/goa/v3/pkg"
)

// BuildActivePayload builds the payload for the email active endpoint from CLI
// flags.
func BuildActivePayload(emailActiveCode string) (*email.ActivePayload, error) {
	var code string
	{
		code = emailActiveCode
	}
	payload := &email.ActivePayload{
		Code: code,
	}
	return payload, nil
}

// BuildSendEmailPayload builds the payload for the email send_email endpoint
// from CLI flags.
func BuildSendEmailPayload(emailSendEmailBody string) (*email.SendEmailPayload, error) {
	var err error
	var body SendEmailRequestBody
	{
		err = json.Unmarshal([]byte(emailSendEmailBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"email\": \"123@456.com\"\n   }'")
		}
		err = goa.MergeErrors(err, goa.ValidatePattern("body.email", body.Email, "\\S+@\\S+\\.\\S+"))
		if err != nil {
			return nil, err
		}
	}
	v := &email.SendEmailPayload{
		Email: body.Email,
	}
	return v, nil
}
