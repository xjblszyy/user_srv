// Code generated by goa v3.0.2, DO NOT EDIT.
//
// email service
//
// Command:
// $ goa gen user/design

package email

import (
	"context"
)

// The email service makes it possible to active user and send active email.
type Service interface {
	// Active user by email code
	Active(context.Context, *ActivePayload) (res string, err error)
	// Send email to active user
	SendEmail(context.Context, *SendEmailPayload) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "email"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"active", "send_email"}

// ActivePayload is the payload type of the email service active method.
type ActivePayload struct {
	// operand
	Code string
}

// SendEmailPayload is the payload type of the email service send_email method.
type SendEmailPayload struct {
	// email of userProfile
	Email string
}

// The Email is invalid
type EmailInvalide struct {
	// Message of error
	Message string
	// ID of missing user
	ID string
}

// The Email is not found
type EmailNotFound struct {
	// Message of error
	Message string
	// ID of missing user
	ID string
}

// Error returns an error description.
func (e *EmailInvalide) Error() string {
	return "The Email is invalid"
}

// ErrorName returns "EmailInvalide".
func (e *EmailInvalide) ErrorName() string {
	return e.Message
}

// Error returns an error description.
func (e *EmailNotFound) Error() string {
	return "The Email is not found"
}

// ErrorName returns "EmailNotFound".
func (e *EmailNotFound) ErrorName() string {
	return e.Message
}
