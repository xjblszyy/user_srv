// Code generated by goa v3.0.2, DO NOT EDIT.
//
// email client
//
// Command:
// $ goa gen user/design

package email

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "email" service client.
type Client struct {
	ActiveEndpoint    goa.Endpoint
	SendEmailEndpoint goa.Endpoint
}

// NewClient initializes a "email" service client given the endpoints.
func NewClient(active, sendEmail goa.Endpoint) *Client {
	return &Client{
		ActiveEndpoint:    active,
		SendEmailEndpoint: sendEmail,
	}
}

// Active calls the "active" endpoint of the "email" service.
// Active may return the following errors:
//	- "invalide_code" (type *EmailInvalide): invalide code
//	- error: internal error
func (c *Client) Active(ctx context.Context, p *ActivePayload) (res string, err error) {
	var ires interface{}
	ires, err = c.ActiveEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// SendEmail calls the "send_email" endpoint of the "email" service.
// SendEmail may return the following errors:
//	- "invalide_email" (type *EmailInvalide): invalide email
//	- "email_not_found" (type *EmailNotFound): email not found
//	- error: internal error
func (c *Client) SendEmail(ctx context.Context, p *SendEmailPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.SendEmailEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
